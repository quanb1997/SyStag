# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-07 01:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('groupid', models.AutoField(db_column='GroupID', primary_key=True, serialize=False)),
                ('groupname', models.CharField(db_column='GroupName', max_length=45)),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='GroupSystems',
            fields=[
                ('groupsystemsid', models.AutoField(db_column='', primary_key=True, serialize=False)),
                ('groupid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Group')),
                ('serialnumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.System')),
            ],
            options={
                'db_table': 'groupsystems',
            },
        ),
        migrations.CreateModel(
            name='GroupUsers',
            fields=[
                ('groupmanagementid', models.AutoField(db_column='GroupManagementID', primary_key=True, serialize=False)),
                ('admin', models.IntegerField(blank=True, null=True)),
                ('groupid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Group')),
            ],
            options={
                'db_table': 'groupmanagement',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tagid', models.AutoField(db_column='TagID', primary_key=True, serialize=False)),
                ('tagname', models.CharField(db_column='TagName', max_length=45)),
                ('public', models.IntegerField(blank=True, db_column='Public', null=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='TagRelations',
            fields=[
                ('generalmanagerid', models.AutoField(db_column='GeneralManagerID', primary_key=True, serialize=False)),
                ('groupid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Group')),
                ('serialnumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.System')),
                ('tagid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Tag')),
            ],
            options={
                'db_table': 'generalmanagement',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.AutoField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=45)),
                ('password', models.CharField(db_column='Password', max_length=45)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.AddField(
            model_name='tag',
            name='groups',
            field=models.ManyToManyField(related_name='tags', through='backend.TagRelations', to='backend.Group'),
        ),
        migrations.AddField(
            model_name='tag',
            name='systems',
            field=models.ManyToManyField(related_name='tags', through='backend.TagRelations', to='backend.System'),
        ),
        migrations.AddField(
            model_name='tag',
            name='userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='groupusers',
            name='userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.User'),
        ),
        migrations.AddField(
            model_name='group',
            name='systems',
            field=models.ManyToManyField(related_name='groups', through='backend.GroupSystems', to='backend.System'),
        ),
        migrations.AddField(
            model_name='group',
            name='users',
            field=models.ManyToManyField(related_name='groups', through='backend.GroupUsers', to='backend.User'),
        ),
    ]
