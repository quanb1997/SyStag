# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-07 00:12
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='System',
            fields=[
                ('serialnumber', models.IntegerField(db_column='serialNumber', primary_key=True, serialize=False)),
                ('companyname', models.TextField(blank=True, db_column='companyName', null=True)),
                ('systemname', models.TextField(blank=True, db_column='systemName', null=True)),
                ('productfamily', models.IntegerField(blank=True, db_column='productFamily', null=True)),
                ('model', models.TextField(blank=True, null=True)),
                ('osversion', models.TextField(blank=True, db_column='osVersion', null=True)),
                ('patches', models.TextField(blank=True, null=True)),
                ('cpgcount', models.IntegerField(blank=True, db_column='cpgCount', null=True)),
                ('recommended_osversion', models.TextField(blank=True, db_column='recommended.osVersion', null=True)),
                ('location_region', models.TextField(blank=True, db_column='location.region', null=True)),
                ('location_country', models.TextField(blank=True, db_column='location.country', null=True)),
                ('installdate', models.TextField(blank=True, db_column='installDate', null=True)),
                ('updated', models.TextField(blank=True, null=True)),
                ('capacity_total_freepct', models.FloatField(blank=True, db_column='capacity.total.freePct', null=True)),
                ('capacity_total_freetib', models.FloatField(blank=True, db_column='capacity.total.freeTiB', null=True)),
                ('capacity_total_sizetib', models.FloatField(blank=True, db_column='capacity.total.sizeTiB', null=True)),
                ('capacity_total_deduperatio', models.TextField(blank=True, db_column='capacity.total.dedupeRatio', null=True)),
                ('nodes_nodecount', models.IntegerField(blank=True, db_column='nodes.nodeCount', null=True)),
                ('nodes_nodecountoffline', models.IntegerField(blank=True, db_column='nodes.nodeCountOffline', null=True)),
                ('disks_total_diskcount', models.IntegerField(blank=True, db_column='disks.total.diskCount', null=True)),
                ('disks_total_diskcountnormal', models.IntegerField(blank=True, db_column='disks.total.diskCountNormal', null=True)),
                ('disks_total_diskcountdegraded', models.TextField(blank=True, db_column='disks.total.diskCountDegraded', null=True)),
                ('disks_total_diskcountfailed', models.TextField(blank=True, db_column='disks.total.diskCountFailed', null=True)),
                ('contractstartdate', models.TextField(blank=True, db_column='contractStartDate', null=True)),
                ('contractenddate', models.TextField(blank=True, db_column='contractEndDate', null=True)),
                ('batteryexpiry', models.TextField(blank=True, db_column='batteryExpiry', null=True)),
                ('sp_spversion', models.TextField(blank=True, db_column='sp.spVersion', null=True)),
                ('vvcount', models.IntegerField(blank=True, db_column='vvCount', null=True)),
                ('tpvvcount', models.IntegerField(blank=True, db_column='tpvvCount', null=True)),
                ('vvcountfull', models.IntegerField(blank=True, db_column='vvCountFull', null=True)),
                ('tdvvsizetib', models.TextField(blank=True, db_column='tdvvSizeTiB', null=True)),
                ('performance_portbandwidthdata_total_dataratekbpsavg', models.FloatField(blank=True, db_column='performance.portBandwidthData.total.dataRateKBPSAvg', null=True)),
                ('performance_portbandwidthdata_total_iopsavg', models.IntegerField(blank=True, db_column='performance.portBandwidthData.total.iopsAvg', null=True)),
                ('performance_portbandwidthdata_total_iopsmax', models.FloatField(blank=True, db_column='performance.portBandwidthData.total.iopsMax', null=True)),
                ('performance_summary_portinfo_totalservicetimemillis', models.FloatField(blank=True, db_column='performance.summary.portInfo.totalServiceTimeMillis', null=True)),
                ('performance_summary_portinfo_readservicetimemillis', models.FloatField(blank=True, db_column='performance.summary.portInfo.readServiceTimeMillis', null=True)),
                ('performance_summary_portinfo_writeservicetimemillis', models.FloatField(blank=True, db_column='performance.summary.portInfo.writeServiceTimeMillis', null=True)),
                ('performance_summary_delackpct', models.TextField(blank=True, db_column='performance.summary.delAckPct', null=True)),
                ('performance_summary_vvinfo_vvsbytype_ssd_readbandwidthmbps', models.TextField(blank=True, db_column='performance.summary.vvInfo.vvsByType.ssd.readBandwidthMBPS', null=True)),
                ('performance_summary_vvinfo_vvsbytype_ssd_writebandwidthmbps', models.TextField(blank=True, db_column='performance.summary.vvInfo.vvsByType.ssd.writeBandwidthMBPS', null=True)),
                ('performance_summary_vvinfo_vvsbytype_ssd_readservicetimemillis', models.TextField(blank=True, db_column='performance.summary.vvInfo.vvsByType.ssd.readServiceTimeMillis', null=True)),
                ('performance_summary_vvinfo_vvsbytype_ssd_writeservicetimemillis', models.TextField(blank=True, db_column='performance.summary.vvInfo.vvsByType.ssd.writeServiceTimeMillis', null=True)),
                ('nodes_cpuavgmax', models.IntegerField(blank=True, db_column='nodes.cpuAvgMax', null=True)),
            ],
            options={
                'db_table': 'db',
            },
        ),
    ]
